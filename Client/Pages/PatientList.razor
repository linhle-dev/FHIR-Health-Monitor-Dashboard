@using FIT3077.Shared.Models
<style>
    .fas.spinning {
        animation: spin 1s infinite linear;
    }

    @@keyframes spin {
        from {
            transform: scale(1) rotate(0deg);
        }

        to {
            transform: scale(1) rotate(360deg);
        }
    }


    .fa-left {
        margin-right: 7px;
    }

    .btn.search {
        width: 10rem;
    }

</style>
    <style>
        .center {
            text-align: center;
        }
    </style>
    <Table Narrow="true" Striped="true">
        <TableHeader>
            <TableHeaderCell  class="center col-8" style="vertical-align: top;">Name</TableHeaderCell>
            <TableHeaderCell class="center col-4" >Monitor</TableHeaderCell>
        </TableHeader>
        <TableBody>
        @if (Patients != null)
        {
            @foreach (var patient in Patients)
            {
                <TableRow>
                    <TableRowCell class="center" >
                        @patient.Value.Name
                    </TableRowCell>
                    <TableRowCell class="center">
                        @if (IsLoading)
                        {
                            <button class="btn btn-dark btn-sm" disabled><span></span>Loading...</button>
                        }
                        else
                        {
                            if (@patient.Value.AddedToMonitor)
                            {
                                <button class="btn btn-danger btn-sm disabled">Added</button>
                            }
                            else
                            {
                                <button class="btn btn-primary btn-sm" @onclick="() => OnAdd.InvokeAsync(patient.Value)">Add</button>
                            }
                        }
                    </TableRowCell>
                </TableRow>
            }
        }
        </TableBody>
    </Table>
@code
{
    [Parameter]
    public IReadOnlyDictionary<string, Patient> Patients { get; set; }
    [Parameter]
    public EventCallback<Patient> OnAdd { get; set; }
    [Parameter]
    public bool IsLoading { get; set; }

}