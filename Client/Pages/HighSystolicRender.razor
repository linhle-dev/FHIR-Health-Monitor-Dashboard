@using FIT3077.Shared.Models
    <div>
        <div style="text-align: center"><p>@Monitor.PatientName</p></div>
        <LineChart style="height: 260px" @ref="lineChart" TItem="double" />
    </div>
   

    

@code{
    [Parameter]
    public Monitor Monitor { get; set; }

    LineChart<double> lineChart;

    /// <summary>
    /// This function is called after a component has finished rendering. This stage is to initialize Blazorise library
    /// </summary>
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await HandleRedraw();
        }
    }

    /// <summary>
    /// This function clear old data, add new data and update the latest chart
    /// </summary>
    async Task HandleRedraw()
    {
        await lineChart.Clear();

        await lineChart.AddLabel(Labels);

        await lineChart.AddDataSet(GetLineChartDataset());

        await lineChart.Update();
    }

    /// <summary>
    /// This function create a new line chart for dataset
    /// </summary>
    /// <returns> New line chart dataset </returns>
    LineChartDataset<double> GetLineChartDataset()
    {
        return new LineChartDataset<double>
        {
            Label = "Value of Systolic Blood Pressure",
            Data = RetrieveData(),
            BackgroundColor = backgroundColors,
            BorderColor = borderColors,
            Fill = false,
            PointRadius = 2,
            BorderDash = new List<int> { }
        };
    }

    string[] Labels = { "1", "2", "3", "4", "5" };
    List<string> backgroundColors = new List<string> { ChartColor.FromRgba(54, 162, 235, 0.2f), ChartColor.FromRgba(255, 206, 86, 0.2f), ChartColor.FromRgba(75, 192, 192, 0.2f), ChartColor.FromRgba(153, 102, 255, 0.2f), ChartColor.FromRgba(255, 159, 64, 0.2f) };
    List<string> borderColors = new List<string> { ChartColor.FromRgba(54, 162, 235, 1f), ChartColor.FromRgba(255, 206, 86, 1f), ChartColor.FromRgba(75, 192, 192, 1f), ChartColor.FromRgba(153, 102, 255, 1f), ChartColor.FromRgba(255, 159, 64, 1f) };

    /// <summary>
    /// This function retrieve systolic value in Monitors
    /// </summary>
    /// <returns> List of systolic value in type of double</returns>
    List<double> RetrieveData()
    {
        var dataSet = new List<double>();
        foreach (var v in Monitor.MeasurementList.BloodPressureRecords.Records)
        {
            dataSet.Add(int.Parse(v.SystolicValue));
        }
        dataSet.Reverse();
        return dataSet;
    }
}
