@using FIT3077.Shared.Models
<div>
    <BarChart style="height: 260px" @ref="barChart" TItem="double" />
</div>

@code {

    [Parameter]
    public IReadOnlyList<Monitor> Monitors { get; set; }

    BarChart<double> barChart;

    /// <summary>
    /// This function is called after a component has finished rendering. This stage is to initialize Blazorise library
    /// </summary>
    protected override void OnAfterRender(bool firstRender)
    {
        if (Monitors != null)
        {
            HandleRedraw();
        }

    }

    /// <summary>
    /// This function clear old data, add new data and update the latest chart
    /// </summary>
    void HandleRedraw()
    {
        barChart.Clear();

        barChart.AddLabel(RetrieveNames().ToArray());

        barChart.AddDataSet(GetBarChartDataset());

        barChart.Update();
    }
    /// <summary>
    /// This function create a new bar chart for dataset
    /// </summary>
    /// <returns> New bar chart dataset </returns>
    BarChartDataset<double> GetBarChartDataset()
    {
        return new BarChartDataset<double>
        {
            Label = "Cholesterol level",
            Data = RetrieveCholesterolData(),
            BackgroundColor = backgroundColors[0],
            BorderColor = borderColors[0]
        };
    }

    List<string> backgroundColors = new List<string> { ChartColor.FromRgba(255, 99, 132, 0.2f) };
    List<string> borderColors = new List<string> { ChartColor.FromRgba(255, 99, 132, 1f)};
    /// <summary>
    /// This function retrieve cholesterol value in Monitors
    /// </summary>
    /// <returns> List of cholesterol value in type of double</returns>
    List<double> RetrieveCholesterolData()
    {
        var dataSet = new List<double>();
        foreach (var v in Monitors)
        {
            if (v.MeasurementList.CholesterolRecords.IsMonitored)
            {
                dataSet.Add(Convert.ToDouble(v.MeasurementList.CholesterolRecords.Records[0].CholesterolValue));
            }
        }

        return dataSet;
    }
    /// <summary>
    /// This function retrieve name of patients in Monitors
    /// </summary>
    /// <returns> List of patients' name
    List<string> RetrieveNames()
    {
        var Labels = new List<string>();
        foreach (var v in Monitors)
        {
            if (v.MeasurementList.CholesterolRecords.IsMonitored)
            {
                Labels.Add(v.PatientName);
            }
        }

        return Labels;
    }

}